[{"title":"TensorFlow环境搭建","date":"2017-03-19T15:52:42.000Z","path":"ml/TensorFlow环境搭建/","text":"前言 虽然之前零零散散的有看过TensorFlow, 但前些天才买了一本《TensorFlow实战》来系统的进行学习，所以这里记录一些笔记，以供备忘 测试环境搭建安装Anaconda3 之前自己本地使用的都是Anaconda2, 看到越来越多的东西都在推Py3,所以折腾TF的时候也安装个Anaconda3 123通过其官网下载命令行安装版https://repo.continuum.io/archive/Anaconda3-4.3.1-MacOSX-x86_64.sh然后直接 bash Anaconda3-4.3.1-MacOSX-x86_64.sh 安装成功后提示修改PATH由于我使用的是zsh，所以直接修改.zshrc文件即可 1234567891011121314151617installing: conda-env-2.6.0-0 ...Python 3.6.0 :: Continuum Analytics, Inc.creating default environment...installation finished.Do you wish the installer to prepend the Anaconda3 install locationto PATH in your /Users/tp/.bash_profile ? [yes|no][yes] &gt;&gt;&gt;Prepending PATH=/Users/tp/anaconda3/bin to PATH in /Users/tp/.bash_profileA backup will be made to: /Users/tp/.bash_profile-anaconda3.bakFor this change to become active, you have to open a new terminal.Thank you for installing Anaconda3!Share your notebooks and packages on Anaconda Cloud!Sign up for free: https://anaconda.org .zshrc中加入PATH1export PATH=&quot;/Users/tp/anaconda3/bin:$PATH&quot; 通过Anaconda安装TensorFlow环境1234567891011121314151617181920212223242526272829303132333435363738➜ ~ conda create -n tensorflow python=3.5Fetching package metadata ...........Solving package specifications: .Package plan for installation in environment /Users/tp/anaconda3/envs/tensorflow:The following NEW packages will be INSTALLED: openssl: 1.0.2k-1 pip: 9.0.1-py35_1 python: 3.5.3-1 readline: 6.2-2 setuptools: 27.2.0-py35_0 sqlite: 3.13.0-0 tk: 8.5.18-0 wheel: 0.29.0-py35_0 xz: 5.2.2-1 zlib: 1.2.8-3Proceed ([y]/n)? yopenssl-1.0.2k 100% |################################| Time: 0:00:01 1.72 MB/sreadline-6.2-2 100% |################################| Time: 0:00:00 11.93 MB/ssqlite-3.13.0- 100% |################################| Time: 0:00:00 6.10 MB/stk-8.5.18-0.ta 100% |################################| Time: 0:00:00 3.84 MB/sxz-5.2.2-1.tar 100% |################################| Time: 0:00:00 1.15 MB/szlib-1.2.8-3.t 100% |################################| Time: 0:00:00 8.54 MB/spython-3.5.3-1 100% |################################| Time: 0:00:02 5.15 MB/ssetuptools-27. 100% |################################| Time: 0:00:00 5.15 MB/swheel-0.29.0-p 100% |################################| Time: 0:00:00 6.24 MB/spip-9.0.1-py35 100% |################################| Time: 0:00:00 4.64 MB/s## To activate this environment, use:# &gt; source activate tensorflow## To deactivate this environment, use:# &gt; source deactivate tensorflow#","tags":[{"name":"TensorFlow","slug":"TensorFlow","permalink":"http://yoursite.com/tags/TensorFlow/"},{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"},{"name":"机器学习","slug":"机器学习","permalink":"http://yoursite.com/tags/机器学习/"}]},{"title":"Docker 笔记","date":"2017-03-18T07:16:01.000Z","path":"virtualization/Docker笔记/","text":"安装Docker Docker官方脚本1curl -sSL https://get.docker.com/ | sh 阿里云脚本 1curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh - DaoCloud脚本 1curl -sSL https://get.daocloud.io/docker | sh 常用操作退出正在运行的容器 不是终止 1先ctrl+p再ctrl+q 检查Docker服务是否运行1ps aux | grep docker 查找镜像 以kali为例1docker search kali 删除所有没有运行的容器1234567➜ ~ docker rm $(docker ps -a | grep Exited | awk &apos;&#123;print $1&#125;&apos;)bcb7eddb6e6fc9175726acaf115104b12746934a087667bd8b20759d9e60d484e3abffa1 修改镜像名字 before 1daocloud.io/library/ubuntu xenial-20160809 f8d79ba03c00 13 days ago 126.4 MB 改名1➜ ~ docker tag daocloud.io/library/ubuntu:xenial-20160809 ubuntu:latest 可以看到除了REPOSITORY和TAG 其他的都一样12daocloud.io/library/ubuntu xenial-20160809 f8d79ba03c00 13 days ago 126.4 MBubuntu latest f8d79ba03c00 13 days ago 126.4 MB 然后删除之前的别名 123➜ ~ docker rmi daocloud.io/library/ubuntu:xenial-20160809Untagged: daocloud.io/library/ubuntu:xenial-20160809Untagged: daocloud.io/library/ubuntu@sha256:746fa32ad3473c57c6a80b9addc1629937778b074b885dcdd9f3366250605850 设置docker开机启动 如果没设置docker服务开机启动的话，先运行命令chkconfig –add docker1在运行docker run的时候再加上命令 --restart=always 修改容器配置 对于已经在运行的容器，可通过如下命令进入容器中进行配置1docker exec -it $container_id /bin/bash 修改源1234567新版的 Docker 使用 /etc/docker/daemon.json（Linux） 或者 %programdata%\\docker\\config\\daemon.json（Windows） 来配置 Daemon。请在该配置文件中加入（没有该文件的话，请先建一个）：&#123; &quot;registry-mirrors&quot;: [&quot;https://docker.mirrors.ustc.edu.cn&quot;]&#125;","tags":[{"name":"Docker","slug":"Docker","permalink":"http://yoursite.com/tags/Docker/"},{"name":"虚拟化","slug":"虚拟化","permalink":"http://yoursite.com/tags/虚拟化/"}]},{"title":"MongoDB 基本操作","date":"2016-05-20T03:23:14.000Z","path":"db/MongoDB-基本操作/","text":"基本操作基本查询 以更美观的方式输出 1db.number.find().pretty() 获取数据库的所有聚合名称12&gt; db.getCollectionNames();[ &quot;phone_number&quot;, &quot;system.indexes&quot; ] 统计数据库特定聚合所有记录数量12db.phone_number.count()16119524 获取数据库特定聚合的索引 比如获取phone_number聚合的所有索引1234567891011&gt; db.phone_number.getIndexes()[ &#123; &quot;v&quot; : 1, &quot;key&quot; : &#123; &quot;_id&quot; : 1 &#125;, &quot;name&quot; : &quot;_id_&quot;, &quot;ns&quot; : &quot;blacklist.phone_number&quot; &#125;] 添加索引 为phone_number的phone字段添加索引1234567&gt; db.phone_number.ensureIndex(&#123;&quot;phone&quot;:1&#125;)&#123; &quot;createdCollectionAutomatically&quot; : false, &quot;numIndexesBefore&quot; : 1, &quot;numIndexesAfter&quot; : 2, &quot;ok&quot; : 1&#125; 再查看索引情况验证一下12345678910111213141516171819&gt; db.phone_number.getIndexes()[ &#123; &quot;v&quot; : 1, &quot;key&quot; : &#123; &quot;_id&quot; : 1 &#125;, &quot;name&quot; : &quot;_id_&quot;, &quot;ns&quot; : &quot;blacklist.phone_number&quot; &#125;, &#123; &quot;v&quot; : 1, &quot;key&quot; : &#123; &quot;phone&quot; : 1 &#125;, &quot;name&quot; : &quot;phone_1&quot;, &quot;ns&quot; : &quot;blacklist.phone_number&quot; &#125;] 分组查询group count123456789101112131415161718192021&gt; db.phone.aggregate([&#123;$group:&#123;_id:&quot;$source&quot;, num_tutorial:&#123;$sum:1&#125;&#125;&#125;])&#123; &quot;_id&quot; : &quot;youm&quot;, &quot;num_tutorial&quot; : 449 &#125;&#123; &quot;_id&quot; : &quot;tianma168&quot;, &quot;num_tutorial&quot; : 349 &#125;&#123; &quot;_id&quot; : &quot;dingdkj&quot;, &quot;num_tutorial&quot; : 3259 &#125;&#123; &quot;_id&quot; : &quot;ypyun&quot;, &quot;num_tutorial&quot; : 10192 &#125;&#123; &quot;_id&quot; : &quot;ilezan&quot;, &quot;num_tutorial&quot; : 43685 &#125;&#123; &quot;_id&quot; : &quot;ism168&quot;, &quot;num_tutorial&quot; : 2856 &#125;&#123; &quot;_id&quot; : &quot;iyylw&quot;, &quot;num_tutorial&quot; : 16284 &#125;&#123; &quot;_id&quot; : &quot;iqiyi&quot;, &quot;num_tutorial&quot; : 1 &#125;&#123; &quot;_id&quot; : &quot;xudan123.com&quot;, &quot;num_tutorial&quot; : 74808 &#125;&#123; &quot;_id&quot; : &quot;vim6&quot;, &quot;num_tutorial&quot; : 26927 &#125;&#123; &quot;_id&quot; : &quot;yzm1&quot;, &quot;num_tutorial&quot; : 449854 &#125;&#123; &quot;_id&quot; : &quot;feiq&quot;, &quot;num_tutorial&quot; : 46670 &#125;&#123; &quot;_id&quot; : &quot;83r.com&quot;, &quot;num_tutorial&quot; : 144898 &#125;&#123; &quot;_id&quot; : &quot;maz8&quot;, &quot;num_tutorial&quot; : 81461 &#125;&#123; &quot;_id&quot; : &quot;kuaima9&quot;, &quot;num_tutorial&quot; : 138903 &#125;&#123; &quot;_id&quot; : &quot;bmyzm&quot;, &quot;num_tutorial&quot; : 6015 &#125;&#123; &quot;_id&quot; : &quot;sunvarma.com&quot;, &quot;num_tutorial&quot; : 45164 &#125;&#123; &quot;_id&quot; : &quot;ema6&quot;, &quot;num_tutorial&quot; : 54819 &#125;&#123; &quot;_id&quot; : &quot;yma0.com&quot;, &quot;num_tutorial&quot; : 417669 &#125;&#123; &quot;_id&quot; : &quot;creditease&quot;, &quot;num_tutorial&quot; : 101747 &#125; 如果需要排序的话123456789101112131415161718192021&gt; db.phone.aggregate([&#123;$group:&#123;_id:&quot;$source&quot;, count:&#123;$sum:1&#125;&#125;&#125;,&#123;$sort:&#123;&quot;count&quot;:-1&#125;&#125;])&#123; &quot;_id&quot; : &quot;other&quot;, &quot;count&quot; : 6133225 &#125;&#123; &quot;_id&quot; : &quot;ly.com&quot;, &quot;count&quot; : 5235378 &#125;&#123; &quot;_id&quot; : &quot;zmyzm.com&quot;, &quot;count&quot; : 1038465 &#125;&#123; &quot;_id&quot; : &quot;f02.cn&quot;, &quot;count&quot; : 644959 &#125;&#123; &quot;_id&quot; : &quot;shjmpt.com&quot;, &quot;count&quot; : 502440 &#125;&#123; &quot;_id&quot; : &quot;yzm1&quot;, &quot;count&quot; : 449854 &#125;&#123; &quot;_id&quot; : &quot;yma0.com&quot;, &quot;count&quot; : 417669 &#125;&#123; &quot;_id&quot; : &quot;6yzm.com&quot;, &quot;count&quot; : 297152 &#125;&#123; &quot;_id&quot; : &quot;taomapt.com&quot;, &quot;count&quot; : 187613 &#125;&#123; &quot;_id&quot; : &quot;83r.com&quot;, &quot;count&quot; : 144898 &#125;&#123; &quot;_id&quot; : &quot;kuaima9&quot;, &quot;count&quot; : 138903 &#125;&#123; &quot;_id&quot; : &quot;creditease&quot;, &quot;count&quot; : 101747 &#125;&#123; &quot;_id&quot; : &quot;tongdun&quot;, &quot;count&quot; : 95012 &#125;&#123; &quot;_id&quot; : &quot;aliqin&quot;, &quot;count&quot; : 87845 &#125;&#123; &quot;_id&quot; : &quot;maz8&quot;, &quot;count&quot; : 81461 &#125;&#123; &quot;_id&quot; : &quot;xudan123.com&quot;, &quot;count&quot; : 74808 &#125;&#123; &quot;_id&quot; : &quot;ema6&quot;, &quot;count&quot; : 54819 &#125;&#123; &quot;_id&quot; : &quot;feiq&quot;, &quot;count&quot; : 46670 &#125;&#123; &quot;_id&quot; : &quot;sunvarma.com&quot;, &quot;count&quot; : 45164 &#125;&#123; &quot;_id&quot; : &quot;yayayama.com&quot;, &quot;count&quot; : 44941 &#125; MongoDB 唯一索引自动删除重复记录123456coll.ensureIndex(&#123;productid:1&#125;) // 在productid上建立普通索引coll.ensureIndex(&#123;district:1, plate:1&#125;) // 多字段索引coll.ensureIndex(&#123;productid:1&#125;, &#123;unique:true&#125;) // 唯一索引coll.ensureIndex(&#123;productid:1&#125;, &#123;unique:true, dropDups:true&#125;) // 建索引时，如果遇到索引字段值已经出现过的情况，则删除重复记录coll.getIndexes() // 查看索引coll.dropIndex(&#123;productid:1&#125;) // 删除单个索 Python 相关12345678910111213141516171819202122232425262728293031323334import requestsimport jsonfrom datetime import datetimefrom pymongo import MongoClient&apos;&apos;&apos;连接到mongodb数据库&apos;&apos;&apos;# 使用默认链接client = MongoClient()# 数据库名为gznu_all_student_infodb = client.gznu_all_student_info# 数据库中相关表记录# 学院相关信息college_collection = db.college# 班级相关信息class_collection = db.class_all_class_collection = db.all_class# 学生信息students_collection = db.studentsdef _save_class_code(url, college_code): &apos;&apos;&apos;将班级信息保持到数据库中&apos;&apos;&apos; print &apos;[*] 正在将班级&#123;&#125;信息保存到数据库中&apos;.format(college_code) info = get_info(url) for i in json.loads(info): for j in i[&apos;children&apos;]: item = &#123;&#125; item[&apos;class_code&apos;] = j[&apos;id&apos;] item[&apos;text&apos;] = j[&apos;text&apos;] item[&apos;college_code&apos;] = college_code item[&apos;update&apos;] = datetime.now() class_collection.insert(item) mongodb.config12345678port=27017dbpath=/data/db/fork=truelogpath=/data/logs/mongodb.loglogappend=truenoauth=truenohttpinterface=truerest=false 导入json文件数据将json数据导入到blacklist的phone_number集合中1mongoimport -h 127.0.0.1 -d blacklist -c phone_number --file blacklist3.json","tags":[{"name":"数据库","slug":"数据库","permalink":"http://yoursite.com/tags/数据库/"},{"name":"MongoDB","slug":"MongoDB","permalink":"http://yoursite.com/tags/MongoDB/"}]},{"title":"旁路镜像、端口镜像、旁路监控","date":"2016-03-20T02:27:03.000Z","path":"server/旁路镜像、端口镜像、旁路监控/","text":"常见的网络监控模式可以分为两种 一种是旁路监控模式 另一种是串联监控模式。 1“旁路监控模式”一般是指通过交换机等网络设备的“端口镜像”功能来实现监控，在此模式下，监控设备只需要连接到交换机的指定镜像端口，所以形象的称之为“旁路监控”。 1而串联模式一般是通过网关、网桥或者代理服务器的模式来进行监控，由于监控设备做为网关或者网桥串联在网络中，所以称之为“串联监控模式”。 旁路模式的优缺点 优点：123旁路监控模式部署起来比较灵活方便，只需要在交换机上面配置镜像端口即可。不会影响现有的网络结构。而串联模式一般要作为网关、网桥或者代理服务器，所以需要对现有网络结构进行变动。旁路模式分析的是镜像端口拷贝过来的数据，对原始传递的数据包不会造成延时，不会对网速造成任何影响。而串联模式是串联在网络中的，那么所有的数据必须先经过监控系统，通过监控系统的分析检查之后，才能够发送到各个客户端，所以会对网速有一定的延时。旁路监控设备一旦故障或者停止运行，不会影响现有网络。而串联监控设备如果出现故障，会导致网络中断。 缺点：12需要交换机或者路由支持“端口镜像”功能才可以实现监控。旁路模式采用发送RST包的方式来断开TCP连接，不能禁止UDP通讯。对于UDP应用，一般还需要在路由器上面禁止UDP端口进行配合。而串联模式不存在该问题。 串联模式的优缺点 优点：12利用windows自带的“网关”、“网桥”功能即可实现，不需要硬件设备的支持。可以禁止UDP通讯数据包。 缺点：123需要更改现有的网络结构。与“旁路监控”相比较，“网关”、“网桥”的配置更加复杂些。由于是串联模式，当局域网电脑台数多时，对网速有少许的影响。这个主要取决于电脑的硬件配置。 交换机镜像端口配置 用户模式：查看初始化相关信息特权模式：查看所有信息、调试、保持配置信息全局模式：配置所有信息、针对整个路由器或交换机的所有接口接口模式：针对某一个接口的配置线控模式：对路由器进行控制的接口配置 1234567sw-1#show monitor 检查是否已存在镜像的配置sw-1#conf t 进入全局模式sw-1&lt;config&gt;#monitor session 2 source int f0/12 both 监控端口f0/12（外网口或叫被镜像端口） both代表双向监听数据 rx代表接收数据 tx代表发送数据sw-1&lt;config&gt;#monitor session 2 destination int f0/24 把信息复制到f0/24（镜像端口）sw-1&lt;config&gt;#end 返回sw-1#show monitor session 2把F0/12 进来的出去的数据复制一份给F0/24，这样我们在晟为就可以截取到数据了。","tags":[{"name":"服务器","slug":"服务器","permalink":"http://yoursite.com/tags/服务器/"},{"name":"流量控制","slug":"流量控制","permalink":"http://yoursite.com/tags/流量控制/"}]}]